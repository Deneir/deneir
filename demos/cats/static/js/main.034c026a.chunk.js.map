{"version":3,"sources":["components/NodePanel/RawDetails.module.scss","components/LegendOverlay/Legend.module.scss","components/LegendOverlay/index.module.scss","components/LeftPanel/FilterBlock.module.scss","components/LeftPanel/Search.module.scss","components/RightPanel/index.module.scss","components/StatusList.module.scss","components/NodePanel/index.module.scss","components/NodePanel/AdvancedDetails.module.scss","components/LeftPanel/Filter.module.scss","components/LeftPanel/index.module.scss","components/LegendOverlay/NeighbourLevelControl.module.scss","components/Button.module.scss","containers/GraphWrapper.module.scss","components/NodeList.module.scss","components/GeneralInfoPanel.module.scss","containers/App.module.scss","constants/action-types.js","reducers/filters.js","reducers/details.js","reducers/index.js","reducers/nodes.js","reducers/group-level.js","reducers/neighbour-level.js","store/configure-store.js","components/LeftPanel/FilterBlock.js","components/LeftPanel/Filter.js","components/Button.js","components/LeftPanel/Search.js","components/LeftPanel/Hierarchy.js","components/LeftPanel/deneir-logo.svg","constants/default-config.js","services/read-config.js","components/LeftPanel/index.js","components/RightPanel/index.js","constants/status-codes.js","components/StatusList.js","components/NodeList.js","components/NodePanel/RawDetails.js","components/NodePanel/AdvancedDetails.js","services/api-client.js","components/NodePanel/index.js","actions/nodes.js","actions/filters.js","components/GeneralInfoPanel.js","reducers/nodes-selector.js","actions/graph.js","components/Graph/draw-link.js","components/Graph/draw-node.js","components/Graph/draw-graph.js","components/Graph/draw-label.js","components/Graph/handle-canvas-click.js","components/Graph/graph-functions.js","components/Graph/index.js","components/Graph/drag.js","components/LegendOverlay/NeighbourLevelControl.js","components/EntityShape/circle.svg","components/EntityShape/index.js","components/EntityShape/database.svg","components/EntityShape/hexagon.svg","components/EntityShape/pentagon.svg","components/EntityShape/heptagon.svg","components/EntityShape/octogon.svg","components/EntityShape/rectangle.svg","components/EntityShape/square.svg","components/EntityShape/triangle.svg","components/LegendOverlay/Legend.js","components/LegendOverlay/index.js","containers/GraphWrapper.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","GET_GRAPH_SUCCESS","GET_DETAILS_REQUEST","GET_DETAILS_SUCCESS","SET_FILTER","RESET_FILTERS","ADD_FILTER","SET_GROUP_LEVEL","SELECT_GROUP","SET_NEIGHBOUR_LEVEL","setFilterReducer","state","action","newState","previousFilter","filter","includes","value","valueIndex","indexOf","newFilter","slice","length","initialState","combineReducers","nodes","type","types","filters","groupLevel","details","neighbourLevel","middleware","thunkMiddleware","FilterBlock","props","initialOpen","title","children","useState","isOpen","setOpen","toggleIcon","faCaretDown","faCaretRight","className","styles","LegendBlock","onClick","icon","contentPanel","open","Filter","values","filterId","onChange","filterList","map","filterOption","checkbox","checked","id","htmlFor","Button","button","ButtonLink","Search","searchTerm","setSearchTerm","activeSuggestion","setActiveSuggestion","showSuggestions","setShowSuggestions","history","useHistory","filteredSuggestions","cleanSearch","toLowerCase","trim","Object","keys","findNodeMatches","handleSubmit","search","push","searchContainer","searchBox","placeholder","event","target","onKeyDown","keyCode","Math","max","min","onBlur","onFocus","suggestionsList","idx","onMouseDown","suggestionIdx","Hierarchy","hierarchy","setGroupLevel","hierarchyOptions","groupLevelOption","name","canvasSettings","zoom","scale","duration","backgroundColor","minimumScale","maximumScale","lineWidth","radius","label","fontSize","fillStyle","textAlign","fontType","fontName","defaultStatus","statusColors","ok","warning","critical","emergency","unknown","statusStrokes","links","bend","arrowheadLength","arrowWidth","arrowheadWidth","startArrow","endArrow","vectorColor","meta","subtitle","processName","entityTypes","default","shape","detailsUrl","pollingInterval","enablePolling","config","getConfig","key","defaultConfig","Error","mergeDeep","isObject","obj","objects","reduce","prev","forEach","pVal","oVal","Array","isArray","concat","LeftPanel","actions","groupedNodes","availableFilters","LeftPanelContainer","logo","src","alt","handleFilterChange","clearFilterWrapper","handleResetFilters","RightPanel","handleOpenPanel","isPanelOpen","rightPanelIcon","faTimes","faBars","RightPanelToggleButton","closeButton","closedPanelClass","closed","panel","togglePanelContainer","statusCodesToLabels","0","1","2","3","4","StatusList","items","defaultOpen","aggregatedStatusCode","n","status","statusColor","nodeList","style","borderColor","item","itemStatusLabel","itemStatusColor","content","emptyListMessage","NodeList","node","nodeLink","to","RawDetails","JsonBlock","data","HtmlBlock","detailsBlockTitle","rawDetailsBlock","JSON","stringify","dangerouslySetInnerHTML","__html","AdvancedDetails","dependencies","d","code","InstanceDetails","url","instanceDetails","instanceTitle","href","instanceDetailsContent","callApi","method","endpoint","body","apiBaseUrl","authToken","fetch","withCredentials","credentials","headers","Authorization","then","response","result","json","acknowledged","error","NodeDetails","dispatch","useDispatch","selectedNodeId","useParams","selectedNode","useEffect","nodeId","catch","readNodeDetails","panelControls","goBack","faCaretLeft","Boolean","tags","tagsBlock","tagName","tag","tagButton","dependents","GeneralInfoPanel","nodesByStatusCode","statusCode","Number","reverse","getFilteredNodes","neighbourNodes","allNodes","nodeIds","searchedNodes","findNeighbours","depth","neighbours","Set","findNeighbourNodes","filteredNodes","every","some","graphFormatter","nodeDictionary","nodeLinks","dependent","source","flat","readGraphData","setTimeout","drawArrow","context","angle","finalAngle","angles","arcX","arcY","moveTo","cos","sin","lineTo","closePath","drawNodeArrow","vectorX","vectorY","settings","sourceX","x","sourceY","y","targetX","targetY","horizontalMidPoint","verticalMidPoint","distance","sqrt","bendDistance","arcAmountX","arcAmountY","firstAngle","secondAngle","finalFirstAngle","finalSecondAngle","beginPath","arc","strokeStyle","stroke","fill","drawArc","circumference","PI","drawStartArrow","drawEndArrow","atan2","arrowAng","sign","drawAngle","abs","drawNode","strokeColor","shapes","circle","database","hexagon","pentagon","heptagon","octogon","rectangle","square","triangle","nodeShape","renderShape","height","rect","width","xRadius","yRadius","ellipsisOffset","ellipse","drawPolygon","sides","size","side","drawGraph","canvas","cameraPosition","getContext","parentElement","getBoundingClientRect","save","fillRect","translate","k","link","drawLink","font","fillText","drawLabel","restore","getNodeFromCanvasClick","transform","dx","dy","layerX","sourceEvent","layerY","invertX","invertY","i","graphFunctions","Graph","canvasRef","useRef","selectNodeDelay","forceRenderId","clickNode","group","groupId","newGroupLevel","selectGroup","current","initGraph","resizeCanvas","setCameraToNode","zoomFit","ref","d3","simulation","force","strength","on","drawAll","scaleExtent","updateGraph","setCameraPosition","drag","subject","applyX","applyY","active","alphaTarget","restart","fx","fy","onDragStart","onDrag","onDragEnd","call","newCameraPosition","nodeXs","nodeYs","topLeft","bottomRight","center","getGraphBounds","widthRatio","heightRatio","idealScale","transition","nodeToZoom","find","a","defaultProps","NeighbourLevelControl","debounceTimer","setNeighbourLevel","ordinalMarker","neighbourLevelControl","numberInput","e","clearTimeout","EntityShape","StatusLegend","legendWrapper","legend","statusColorMarker","LegendOverlay","faCaretUp","wrapper","pullTab","GraphWrapper","GraphContainer","warningMessageFilters","App","setPanelOpen","setForceRenderId","useSelector","tagId","nodeTagValues","relatedNodes","tagValue","add","dependency","getNodesGroupedByTag","res","filterKey","getAvailableFilters","setFilter","Date","now","app","path","window","location","hostname","match","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.034c026a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"closed\":\"RawDetails_closed__3DXF-\",\"detailsBlockTitle\":\"RawDetails_detailsBlockTitle__3e5CU\",\"rawDetailsBlock\":\"RawDetails_rawDetailsBlock__ELKKZ\",\"HtmlBlock\":\"RawDetails_HtmlBlock__1-_Yr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"legendWrapper\":\"Legend_legendWrapper__1cK5s\",\"legend\":\"Legend_legend__3uF_c\",\"statusColorMarker\":\"Legend_statusColorMarker__3o3VS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LegendOverlay_wrapper__uZ88H\",\"content\":\"LegendOverlay_content__2Qfaw\",\"closed\":\"LegendOverlay_closed__2X_h2\",\"pullTab\":\"LegendOverlay_pullTab__UjXHK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LegendBlock\":\"FilterBlock_LegendBlock__2Ayzb\",\"title\":\"FilterBlock_title__2bRdE\",\"contentPanel\":\"FilterBlock_contentPanel__1i3GK\",\"open\":\"FilterBlock_open__D7-S3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"Search_searchContainer__1luTd\",\"searchBox\":\"Search_searchBox__eGQqE\",\"suggestionsList\":\"Search_suggestionsList__2Z4Pf\",\"activeSuggestion\":\"Search_activeSuggestion__258ia\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"RightPanel_panel__fCHzi\",\"togglePanelContainer\":\"RightPanel_togglePanelContainer__2da4q\",\"closeButton\":\"RightPanel_closeButton__yQd4B\",\"closed\":\"RightPanel_closed__2hzfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodeList\":\"StatusList_nodeList__2gIHp\",\"title\":\"StatusList_title__2jBkH\",\"emptyListMessage\":\"StatusList_emptyListMessage__mU2X_\",\"closed\":\"StatusList_closed__24YU8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panelControls\":\"NodePanel_panelControls__3nvNh\",\"detailsBlockTitle\":\"NodePanel_detailsBlockTitle__1i3HS\",\"closed\":\"NodePanel_closed__2v-Lg\",\"tagsBlock\":\"NodePanel_tagsBlock__1Uv6n\",\"tagName\":\"NodePanel_tagName__zgpjh\",\"tagButton\":\"NodePanel_tagButton__1DdT-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"closed\":\"AdvancedDetails_closed__XRCCL\",\"instanceDetails\":\"AdvancedDetails_instanceDetails__33lI1\",\"instanceDetailsContent\":\"AdvancedDetails_instanceDetailsContent__2aXIM\",\"instanceTitle\":\"AdvancedDetails_instanceTitle__33kjW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterList\":\"Filter_filterList__2f3_3\",\"filterOption\":\"Filter_filterOption__1AZpS\",\"checkbox\":\"Filter_checkbox__1DgDK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LeftPanelContainer\":\"LeftPanel_LeftPanelContainer__2zG2M\",\"logo\":\"LeftPanel_logo__3LDXV\",\"clearFilterWrapper\":\"LeftPanel_clearFilterWrapper__22dN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"neighbourLevelControl\":\"NeighbourLevelControl_neighbourLevelControl__1YmfB\",\"numberInput\":\"NeighbourLevelControl_numberInput__25c2h\",\"ordinalMarker\":\"NeighbourLevelControl_ordinalMarker__3FS_D\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__LwMAv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GraphContainer\":\"GraphWrapper_GraphContainer__1ATvQ\",\"warningMessageFilters\":\"GraphWrapper_warningMessageFilters__o5yc9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nodeLink\":\"NodeList_nodeLink__3Q5qu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GeneralInfoPanel\":\"GeneralInfoPanel_GeneralInfoPanel__20PDS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1v308\"};","export const GET_GRAPH_REQUEST = 'GET_GRAPH_REQUEST';\nexport const GET_GRAPH_SUCCESS = 'GET_GRAPH_SUCCESS';\nexport const GET_GRAPH_FAILURE = 'GET_GRAPH_FAILURE';\n\nexport const GET_DETAILS_REQUEST = 'GET_DETAILS_REQUEST';\nexport const GET_DETAILS_SUCCESS = 'GET_DETAILS_SUCCESS';\nexport const GET_DETAILS_FAILURE = 'GET_DETAILS_FAILURE';\n\nexport const SELECT_NODE = 'SELECT_NODE';\nexport const TOGGLE_PANEL = 'TOGGLE_PANEL';\n\nexport const SET_FILTER = 'SET_FILTER';\nexport const RESET_FILTERS = 'RESET_FILTERS';\nexport const ADD_FILTER = 'ADD_FILTER';\nexport const SET_GROUP_LEVEL = 'SET_GROUP_LEVEL';\nexport const SELECT_GROUP = 'SELECT_GROUP';\nexport const SET_NEIGHBOUR_LEVEL = 'SET_NEIGHBOUR_LEVEL';\n","import * as types from '../constants/action-types';\n\nexport default function filters(state = {}, action) {\n  switch (action.type) {\n    case types.SELECT_GROUP:\n    case types.SET_FILTER:\n      return setFilterReducer(state, action);\n    case types.RESET_FILTERS:\n      return {};\n    case types.ADD_FILTER:\n      if (state[action.filter] && state[action.filter].includes(action.value)) {\n        return state;\n      }\n      return { ...state, [action.filter]: [...(state[action.filter] || []), action.value] };\n    default:\n      return state;\n  }\n}\n\nfunction setFilterReducer(state, action) {\n  const newState = { ...state };\n  const previousFilter = state[action.filter] || [];\n\n  if (!previousFilter.includes(action.value)) {\n    newState[action.filter] = [...previousFilter, action.value];\n    return newState;\n  }\n  const valueIndex = previousFilter.indexOf(action.value);\n  const newFilter = [\n    ...previousFilter.slice(0, valueIndex),\n    ...previousFilter.slice(valueIndex + 1),\n  ];\n\n  newState[action.filter] = newFilter;\n\n  if (!newFilter.length) {\n    delete newState[action.filter];\n  }\n  return newState;\n}\n\nexport function getAvailableFilters(state) {\n  const availableFilters = {};\n\n  Object.values(state.nodes).forEach((node) => {\n    Object.keys(node.tags).forEach((tagId) => {\n      if (!availableFilters[tagId]) {\n        availableFilters[tagId] = [];\n      }\n      availableFilters[tagId].push(...node.tags[tagId]);\n    });\n  }, {});\n\n  return Object.keys(availableFilters).reduce((res, filterKey) => {\n    return { ...res, [filterKey]: [...new Set(availableFilters[filterKey])] };\n  }, {});\n}\n","import * as types from '../constants/action-types';\n\nconst initialState = null;\n\nexport default function nodes(state = initialState, action) {\n  switch (action.type) {\n    case types.GET_DETAILS_REQUEST:\n      return initialState;\n    case types.GET_DETAILS_SUCCESS:\n      return action.details;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport nodes from './nodes';\nimport filters from './filters';\nimport details from './details';\nimport groupLevel from './group-level';\nimport neighbourLevel from './neighbour-level';\n\nexport default combineReducers({\n  nodes,\n  filters,\n  groupLevel,\n  details,\n  neighbourLevel,\n});\n","import * as types from '../constants/action-types';\n\nexport default function nodes(state = {}, action) {\n  switch (action.type) {\n    case types.GET_GRAPH_SUCCESS:\n      return action.nodes;\n    default:\n      return state;\n  }\n}\n","import * as types from '../constants/action-types';\n\nexport default function groupLevel(state = 'node', action) {\n  switch (action.type) {\n    case types.SELECT_GROUP:\n    case types.SET_GROUP_LEVEL:\n      return action.groupLevel;\n    default:\n      return state;\n  }\n}\n","import * as types from '../constants/action-types';\n\nexport default function neighbourLevel(state = 0, action) {\n  switch (action.type) {\n    case types.SET_NEIGHBOUR_LEVEL:\n      return action.neighbourLevel;\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst middleware = [thunkMiddleware];\n\n/* eslint no-process-env:[0] */\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\n\n/**\n * Configure store middlewares\n *\n * @return {Object} store redux store\n */\nexport default function configureStore() {\n  const store = createStore(rootReducer, applyMiddleware(...middleware));\n\n  return store;\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport styles from './FilterBlock.module.scss';\n\nexport default function FilterBlock(props) {\n  const { initialOpen = true, title, children } = props;\n  const [isOpen, setOpen] = useState(initialOpen);\n  const toggleIcon = (isOpen && faCaretDown) || faCaretRight;\n\n  return (\n    <div className={styles.LegendBlock}>\n      {title && (\n        <button className={styles.title} onClick={() => setOpen(!isOpen)}>\n          <span>{title}</span>\n          <FontAwesomeIcon icon={toggleIcon} />\n        </button>\n      )}\n      <div className={`${styles.contentPanel} ${isOpen && styles.open}`}>{children}</div>\n    </div>\n  );\n}\n\nFilterBlock.propTypes = {\n  initialOpen: PropTypes.bool,\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FilterBlock from './FilterBlock';\nimport styles from './Filter.module.scss';\n\nexport default function Filter(props) {\n  const {\n    filters = [], values, filterId, onChange,\n  } = props;\n\n  return (\n    <FilterBlock title={filterId} initialOpen={false}>\n      <ul className={styles.filterList}>\n        {values.map((value) => (\n          <li key={value} className={styles.filterOption}>\n            <input\n              className={styles.checkbox}\n              checked={filters.includes(value)}\n              id={`${filterId}-${value}`}\n              type=\"checkbox\"\n              value={value}\n              onChange={() => onChange(filterId, value)}\n            />\n            <label htmlFor={`${filterId}-${value}`}>{value}</label>\n          </li>\n        ))}\n      </ul>\n    </FilterBlock>\n  );\n}\n\nFilter.propTypes = {\n  filters: PropTypes.array,\n  values: PropTypes.array.isRequired,\n  filterId: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styles from './Button.module.scss';\n\nexport default function Button(props) {\n  return (\n    <button className={styles.button} {...props}>\n      {props.children}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.array]),\n};\n\nexport function ButtonLink(props) {\n  return (\n    <Link className={styles.button} {...props}>\n      {props.children}\n    </Link>\n  );\n}\n\nButtonLink.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.string, PropTypes.array]),\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport Button from '../Button';\nimport styles from './Search.module.scss';\n\nexport default function Search({ nodes }) {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [activeSuggestion, setActiveSuggestion] = useState(0);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const history = useHistory();\n\n  const filteredSuggestions = (searchTerm && findNodeMatches(nodes, searchTerm)) || [];\n\n  const handleSubmit = (search) => {\n    if (!nodes[search]) {\n      return;\n    }\n\n    setSearchTerm(search);\n    setShowSuggestions(false);\n\n    history.push(`/node/${search}`);\n  };\n  const handleChange = (event) => {\n    setActiveSuggestion(0);\n    setSearchTerm(event.target.value);\n    setShowSuggestions(true);\n  };\n  const handleSuggestionClick = (suggestionIdx) => {\n    setActiveSuggestion(suggestionIdx);\n    handleSubmit(filteredSuggestions[suggestionIdx]);\n  };\n  const handleKeyDown = (event) => {\n    // User pressed the enter key\n    if (event.keyCode === 13) {\n      handleSubmit(filteredSuggestions[activeSuggestion]);\n    }\n    // User pressed the up arrow, decrement the index\n    if (event.keyCode === 38) {\n      setActiveSuggestion(Math.max(activeSuggestion - 1, 0));\n    }\n    // User pressed the down arrow, increment the index\n    if (event.keyCode === 40) {\n      setActiveSuggestion(Math.min(activeSuggestion + 1, filteredSuggestions.length - 1));\n    }\n  };\n  const handleBlur = () => {\n    setShowSuggestions(false);\n  };\n  const handleFocus = () => {\n    setShowSuggestions(true);\n  };\n\n  return (\n    <div className={styles.searchContainer}>\n      <div className={styles.searchBox}>\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          value={searchTerm}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n        />\n        <Button onClick={() => handleSubmit(searchTerm)} type=\"button\">\n          Locate\n        </Button>\n      </div>\n      {showSuggestions && filteredSuggestions.length > 0 && (\n        <ul className={styles.suggestionsList}>\n          {filteredSuggestions.slice(0, 10).map((id, idx) => (\n            <li\n              key={id}\n              className={(idx === activeSuggestion && styles.activeSuggestion) || null}\n              onMouseDown={() => handleSuggestionClick(idx)}\n            >\n              {id}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nSearch.propTypes = {\n  nodes: PropTypes.instanceOf(Object).isRequired,\n};\n\nfunction findNodeMatches(nodes, searchTerm) {\n  const cleanSearch = searchTerm.toLowerCase().trim();\n\n  return Object.keys(nodes).filter((id) => id.includes(cleanSearch));\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FilterBlock from './FilterBlock';\n\nexport default function Hierarchy(props) {\n  const { hierarchy, setGroupLevel, groupLevel } = props;\n  const hierarchyOptions = [...hierarchy, 'node'];\n\n  return (\n    <FilterBlock title=\"hierarchy\">\n      <ul>\n        {hierarchyOptions.map((groupLevelOption) => (\n          <li key={groupLevelOption}>\n            <input\n              id={`hierarchy-${groupLevelOption}`}\n              type=\"radio\"\n              name=\"hierarchy\"\n              value={groupLevelOption}\n              checked={groupLevel === groupLevelOption}\n              onChange={() => setGroupLevel(groupLevelOption)}\n            />\n            <label htmlFor={`hierarchy-${groupLevelOption}`}>{groupLevelOption}</label>\n          </li>\n        ))}\n      </ul>\n    </FilterBlock>\n  );\n}\n\nHierarchy.propTypes = {\n  hierarchy: PropTypes.array.isRequired,\n  groupLevel: PropTypes.string.isRequired,\n  setGroupLevel: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/deneir-logo.2b6a0327.svg\";","export default {\n  canvasSettings: {\n    zoom: {\n      scale: 1,\n      duration: 750,\n    },\n    backgroundColor: '#131212',\n    minimumScale: 0.05,\n    maximumScale: 1,\n    nodes: {\n      lineWidth: 10,\n      radius: 50,\n      label: {\n        fontSize: 24,\n        fillStyle: '#fff',\n        textAlign: 'center',\n        fontType: 'bold',\n        fontName: 'Lucida Grande, Lucida Sans Unicode, Arial, Helvetica, sans-serif',\n      },\n    },\n    defaultStatus: 'unknown',\n    statusColors: {\n      ok: '#6fcc47',\n      warning: '#F5C21B',\n      critical: '#FF5D55',\n      emergency: '#F03',\n      unknown: '#aaaaaa',\n    },\n    statusStrokes: {\n      ok: '#4e992e',\n      warning: '#c2970a',\n      critical: '#d93a32',\n      emergency: '#C00',\n      unknown: '#888888',\n    },\n    links: {\n      bend: 0.1,\n      arrowheadLength: 30,\n      arrowWidth: 5,\n      arrowheadWidth: 40,\n      startArrow: false,\n      endArrow: true,\n\n      vectorColor: '#ddd',\n    },\n  },\n  hierarchy: false,\n  meta: {\n    subtitle: 'Details',\n    processName: 'processes',\n  },\n  entityTypes: {\n    default: {\n      name: 'default',\n      shape: 'circle',\n    },\n  },\n  detailsUrl: false,\n  pollingInterval: 5 * 60 * 1000,\n  enablePolling: false,\n};\n","import defaultConfig from '../constants/default-config';\n\nlet config = {};\n\n// We force getting config info key by key, rather than giving the entire config object,\n// so that the errors can be as explicit as possible\nexport function getConfig(key) {\n  if (\n    !config[key]\n    && config[key] !== false\n    && !defaultConfig[key]\n    && defaultConfig[key] !== false\n  ) {\n    throw new Error(\n      `Could not find config key \"${key}\", maybe you forgot to set it in your config file?`,\n    );\n  }\n\n  return config[key] || defaultConfig[key];\n}\n\nexport function readConfig() {\n  return fetch('config.json')\n    .then((response) => response.json())\n    .then((res) => {\n      config = mergeDeep(defaultConfig, res);\n    })\n    .catch((error) => {\n      throw new Error(\n        'Could not parse config file, are you sure it is correctly formatted?',\n        error,\n      );\n    });\n}\n\n/**\n * Performs a deep merge of objects and returns new object. Does not modify\n * objects (immutable) and merges arrays via concatenation.\n *\n * @param {...object} objects - Objects to merge\n * @returns {object} New object with merged key/values\n */\n/* eslint-disable no-param-reassign */\nfunction mergeDeep(...objects) {\n  const isObject = (obj) => obj && typeof obj === 'object';\n\n  return objects.reduce((prev, obj) => {\n    Object.keys(obj).forEach((key) => {\n      const pVal = prev[key];\n      const oVal = obj[key];\n\n      if (Array.isArray(pVal) && Array.isArray(oVal)) {\n        prev[key] = pVal.concat(...oVal);\n      } else if (isObject(pVal) && isObject(oVal)) {\n        prev[key] = mergeDeep(pVal, oVal);\n      } else {\n        prev[key] = oVal;\n      }\n    });\n\n    return prev;\n  }, {});\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Filter from './Filter';\nimport Search from './Search';\nimport Hierarchy from './Hierarchy';\nimport styles from './index.module.scss';\nimport Button from '../Button';\nimport logo from './deneir-logo.svg';\n\nimport { getConfig } from '../../services/read-config';\n\nexport default function LeftPanel(props) {\n  const hierarchy = getConfig('hierarchy');\n  const {\n    actions, groupedNodes, groupLevel, availableFilters, filters,\n  } = props;\n\n  return (\n    <div className={styles.LeftPanelContainer}>\n      <h1 className={styles.logo}>\n        <img src={logo} alt=\"DENEIR\" />\n      </h1>\n      <Search nodes={groupedNodes} />\n      {hierarchy && (\n        <Hierarchy\n          hierarchy={hierarchy}\n          groupLevel={groupLevel}\n          setGroupLevel={actions.setGroupLevel}\n        />\n      )}\n      {Object.keys(availableFilters).map((filterId) => (\n        <Filter\n          key={filterId}\n          filters={filters[filterId]}\n          filterId={filterId}\n          values={availableFilters[filterId]}\n          onChange={actions.handleFilterChange}\n        />\n      ))}\n      {Object.keys(filters).length > 0 && (\n        <div className={styles.clearFilterWrapper}>\n          <Button type=\"button\" onClick={actions.handleResetFilters}>Clear filters</Button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nLeftPanel.propTypes = {\n  actions: PropTypes.object,\n  groupedNodes: PropTypes.object,\n  groupLevel: PropTypes.string,\n  neighbourLevel: PropTypes.number,\n  availableFilters: PropTypes.object,\n  filters: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from './index.module.scss';\n\nexport default function RightPanel(props) {\n  const { children, handleOpenPanel, isPanelOpen } = props;\n  const rightPanelIcon = (isPanelOpen && faTimes) || faBars;\n  const RightPanelToggleButton = () => (\n    <button className={styles.closeButton} onClick={() => handleOpenPanel(!isPanelOpen)}>\n      <FontAwesomeIcon icon={rightPanelIcon} />\n    </button>\n  );\n  const closedPanelClass = (!isPanelOpen && styles.closed) || '';\n\n  return (\n    <section className={`${styles.panel} ${closedPanelClass}`}>\n      <div className={styles.togglePanelContainer}>\n        <RightPanelToggleButton />\n      </div>\n      {children}\n    </section>\n  );\n}\n\nRightPanel.propTypes = {\n  children: PropTypes.any,\n  handleOpenPanel: PropTypes.func,\n  isPanelOpen: PropTypes.bool,\n};\n","export const labelsToStatusCodes = {\n  ok: 0,\n  warning: 1,\n  critical: 2,\n  emergency: 3,\n  unknown: 4,\n};\nexport const statusCodesToLabels = {\n  0: 'ok',\n  1: 'warning',\n  2: 'critical',\n  3: 'emergency',\n  4: 'unknown',\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { getConfig } from '../services/read-config';\nimport { statusCodesToLabels } from '../constants/status-codes';\nimport styles from './StatusList.module.scss';\n\nexport default function StatusList(props) {\n  const {\n    title, items, defaultOpen = true,\n  } = props;\n  const settings = getConfig('canvasSettings');\n  const { statusColors } = settings;\n  const [open, setOpen] = useState(defaultOpen);\n  const toggleIcon = (open && faCaretDown) || faCaretRight;\n  const aggregatedStatusCode = Math.max(...items.map((n) => n.status));\n  const statusLabel = statusCodesToLabels[aggregatedStatusCode];\n  const statusColor = statusColors[statusLabel];\n\n  return (\n    <div className={styles.nodeList}>\n      <button\n        className={styles.title}\n        style={{ borderColor: statusColor }}\n        onClick={() => setOpen(!open)}\n      >\n        {title} ({items.length}) <FontAwesomeIcon icon={toggleIcon} />\n      </button>\n      <div>\n        <ul className={(!open && styles.closed) || ''}>\n          {items.length > 0\n            && items.map((item) => {\n              const itemStatusLabel = statusCodesToLabels[item.status];\n              const itemStatusColor = statusColors[itemStatusLabel];\n\n              return (\n                <li key={item.id} style={{ borderColor: itemStatusColor }}>\n                  {item.content}\n                </li>\n              );\n            })}\n          {items.length === 0 && (\n            <li className={styles.emptyListMessage}>there are no items in this list</li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nStatusList.propTypes = {\n  items: PropTypes.array.isRequired,\n  defaultOpen: PropTypes.bool,\n  title: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport StatusList from './StatusList';\nimport styles from './NodeList.module.scss';\n\nexport default function NodeList(props) {\n  const { title, nodes, defaultOpen = true } = props;\n\n  return (\n    <StatusList\n      title={title}\n      items={nodes.map((node) => {\n        return {\n          ...node,\n          content: <Link className={styles.nodeLink} to={`/node/${node.id}`}>{node.id}</Link>,\n        };\n      })}\n      defaultOpen={defaultOpen}\n    />\n  );\n}\n\nNodeList.propTypes = {\n  nodes: PropTypes.array.isRequired,\n  defaultOpen: PropTypes.bool,\n  title: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport styles from './RawDetails.module.scss';\n\nexport default function RawDetails(props) {\n  const { details } = props;\n\n  return (\n    <div>\n      {Object.keys(details).map((key) => {\n        // objects and arrays are shown as raw json\n        if (typeof details[key] === 'object') {\n          return <JsonBlock key={key} title={key} data={details[key]} />;\n        }\n        // strings are either show as an html block if they're big\n        if (details[key].length > 300) {\n          return <HtmlBlock key={key} title={key} data={details[key]} />;\n        }\n        // or as a simple text property if they're short enough\n        return (\n          <div key={key}>\n            <b>{key}:</b> {details[key]}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nRawDetails.propTypes = {\n  details: PropTypes.instanceOf(Object),\n};\n\nfunction JsonBlock({ title, data }) {\n  const [open, setOpen] = useState(false);\n  const toggleIcon = (open && faCaretDown) || faCaretRight;\n\n  return (\n    <div>\n      <button className={styles.detailsBlockTitle} onClick={() => setOpen(!open)}>\n        <span>{title}</span> <FontAwesomeIcon icon={toggleIcon} />\n      </button>\n      <div className={(!open && styles.closed) || ''}>\n        <pre className={styles.rawDetailsBlock}>{JSON.stringify(data, null, 2)}</pre>\n      </div>\n    </div>\n  );\n}\n\nJsonBlock.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.instanceOf(Object),\n};\n\nfunction HtmlBlock({ title, data }) {\n  const [open, setOpen] = useState(false);\n  const toggleIcon = (open && faCaretDown) || faCaretRight;\n\n  return (\n    <div>\n      <button className={styles.detailsBlockTitle} onClick={() => setOpen(!open)}>\n        <span>{title}</span> <FontAwesomeIcon icon={toggleIcon} />\n      </button>\n      <div className={(!open && styles.closed) || ''}>\n        <div className={styles.HtmlBlock} dangerouslySetInnerHTML={{ __html: data }}></div>\n      </div>\n    </div>\n  );\n}\n\nHtmlBlock.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.string,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { faCaretDown, faCaretRight } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport RawDetails from './RawDetails';\nimport styles from './AdvancedDetails.module.scss';\nimport StatusList from '../StatusList';\n\nexport default function AdvancedDetails(props) {\n  const { details } = props;\n\n  if (!Array.isArray(details)) {\n    return 'Node details should be an array of objects';\n  }\n\n  return (\n    <StatusList\n      title=\"Instances\"\n      items={details.map((item) => {\n        const { dependencies } = item;\n\n        return {\n          ...item,\n          status: dependencies && Math.max(...dependencies.map((d) => d.status.code)),\n          content: <InstanceDetails key={item.id} {...item} />,\n        };\n      })}\n      defaultOpen={true}\n    />\n  );\n}\n\nAdvancedDetails.propTypes = {\n  details: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      dependencies: PropTypes.arrayOf(\n        PropTypes.shape({\n          status: PropTypes.shape({\n            code: PropTypes.number.isRequired,\n          }).isRequired,\n        }),\n      ),\n    }),\n  ).isRequired,\n};\n\nfunction InstanceDetails({ url, id, details }) {\n  const [open, setOpen] = useState(false);\n  const toggleIcon = (open && faCaretDown) || faCaretRight;\n\n  return (\n    <div className={styles.instanceDetails}>\n      <button className={styles.instanceTitle} onClick={() => setOpen(!open)}>\n        <span title={id}>{id}</span> {url && <a href={url}>(url)</a>}\n        <FontAwesomeIcon icon={toggleIcon} />\n      </button>\n      <div className={`${styles.instanceDetailsContent} ${(!open && styles.closed) || ''}`}>\n        <div key={id}>{details && <RawDetails details={details} />}</div>\n      </div>\n    </div>\n  );\n}\n\nInstanceDetails.propTypes = {\n  url: PropTypes.string,\n  id: PropTypes.string,\n  title: PropTypes.string,\n  details: PropTypes.object,\n};\n","import { getConfig } from './read-config';\n\n/**\n * Base API call method\n *\n * @param  {String} method    POST | GET | PUT | DELETE\n * @param  {String} endpoint       endpoint to call\n * @param  {Object} body      payload of the request (default {})\n * @return {Promise} promise  promise with the API call\n */\nexport default function callApi(method, endpoint, body) {\n  const apiBaseUrl = getConfig('apiBaseUrl');\n  const authToken = getConfig('authToken');\n\n  return fetch(`${apiBaseUrl}/${endpoint}`, {\n    method,\n    body,\n    withCredentials: true,\n    credentials: 'include',\n    headers: {\n      Authorization: `Bearer ${authToken}`,\n      'Content-Type': 'application/json',\n    },\n  }).then((response) => {\n    const result = response.json();\n\n    if (result.body && result.body.acknowledged === false) {\n      return new Error(result.body.data.error);\n    }\n\n    return result;\n  });\n}\n","import React, { Fragment, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretLeft } from '@fortawesome/free-solid-svg-icons';\nimport NodeList from '../NodeList';\nimport styles from './index.module.scss';\nimport AdvancedDetails from './AdvancedDetails';\nimport { getConfig } from '../../services/read-config';\nimport { readNodeDetails } from '../../actions/nodes';\nimport { addFilter } from '../../actions/filters';\nimport Button, { ButtonLink } from '../Button';\n\nexport default function NodeDetails(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { nodes, details } = props;\n  const { selectedNodeId } = useParams();\n  const selectedNode = nodes[selectedNodeId];\n\n  useEffect(() => {\n    const detailsUrl = getConfig('detailsUrl');\n\n    if (detailsUrl) {\n      dispatch(readNodeDetails(selectedNodeId));\n    }\n  }, [dispatch, selectedNodeId]);\n\n  return (\n    <Fragment>\n      <div className={styles.panelControls}>\n        <Button type=\"button\" onClick={history.goBack} title=\"go back to previously selected node\">\n          <FontAwesomeIcon icon={faCaretLeft} /> Back\n        </Button>\n        <ButtonLink type=\"button\" to=\"/\" title={`deselect ${selectedNode.id}`}>\n          Clear\n        </ButtonLink>\n      </div>\n      <h2>{selectedNode.id}</h2>\n      {Boolean(Object.keys(selectedNode.tags).length) && (\n        <div className={styles.tagsBlock}>\n          {Object.keys(selectedNode.tags).map((tagName) => {\n            return (\n              <p key={tagName}>\n                <span className={styles.tagName}>{tagName}</span>{' '}\n                {selectedNode.tags[tagName].map((tag) => {\n                  return (\n                    <button\n                      className={styles.tagButton}\n                      onClick={() => dispatch(addFilter(tagName, tag))}\n                      key={tag}\n                      title={`add \"${tag}\" to the \"${tagName}\" filter `}\n                    >\n                      {tag}\n                    </button>\n                  );\n                })}\n              </p>\n            );\n          })}\n        </div>\n      )}\n      {details && <AdvancedDetails details={details} />}\n      <div>\n        <NodeList\n          title=\"Dependencies\"\n          nodes={selectedNode.dependencies.map((n) => ({ ...n, status: nodes[n.id].status }))}\n        />\n        <NodeList\n          title=\"Dependents\"\n          nodes={selectedNode.dependents.map((n) => ({ ...n, status: nodes[n.id].status }))}\n        />\n      </div>\n    </Fragment>\n  );\n}\n\nNodeDetails.propTypes = {\n  nodes: PropTypes.instanceOf(Object).isRequired,\n  actions: PropTypes.instanceOf(Object).isRequired,\n  details: PropTypes.instanceOf(Object),\n};\n","import * as types from '../constants/action-types';\nimport callApi from '../services/api-client';\nimport { getConfig } from '../services/read-config';\n\n/**\n * Returns the status informations\n *\n * @param {String} nodeId id of the instance\n *\n * @return {Promise}\n */\nexport function readNodeDetails(nodeId) {\n  const detailsUrl = getConfig('detailsUrl');\n\n  return (dispatch) => {\n    dispatch({ type: types.GET_DETAILS_REQUEST });\n\n    return callApi('GET', `${detailsUrl}?instance=${nodeId}`)\n      .then(({ data = [] }) => dispatch({\n        type: types.GET_DETAILS_SUCCESS,\n        details: data,\n        nodeId,\n      }))\n      .catch((error) => {\n        dispatch({\n          type: types.GET_DETAILS_FAILURE,\n          error,\n        });\n      });\n  };\n}\n","import * as types from '../constants/action-types';\nimport { getConfig } from '../services/read-config';\n\nexport function setFilter(filter, value) {\n  return { type: types.SET_FILTER, filter, value };\n}\nexport function resetFilters() {\n  return { type: types.RESET_FILTERS };\n}\nexport function addFilter(filter, value) {\n  return { type: types.ADD_FILTER, filter, value };\n}\n\nexport function setGroupLevel(groupLevel) {\n  return { type: types.SET_GROUP_LEVEL, groupLevel };\n}\n\nexport function selectGroup(groupLevel, groupId) {\n  const hierarchy = [...getConfig('hierarchy'), 'node'];\n  const filter = groupLevel;\n  const value = groupId;\n  const newGroupLevel = hierarchy[hierarchy.indexOf(groupLevel) + 1];\n\n  return {\n    type: types.SELECT_GROUP,\n    groupLevel: newGroupLevel,\n    filter,\n    value,\n  };\n}\nexport function setNeighbourLevel(neighbourLevel) {\n  return { type: types.SET_NEIGHBOUR_LEVEL, neighbourLevel };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './GeneralInfoPanel.module.scss';\nimport { statusCodesToLabels } from '../constants/status-codes';\nimport NodeList from './NodeList';\n\nexport default function GeneralInfoPanel(props) {\n  const { nodes } = props;\n\n  const statusCodes = Object.keys(statusCodesToLabels);\n  const nodesByStatusCode = statusCodes.map((statusCode) => {\n    return Object.values(nodes).filter((node) => Number(node.status) === Number(statusCode));\n  });\n\n  return (\n    <div className={styles.GeneralInfoPanel}>\n      <h2>Overview</h2>\n      {Object.keys(statusCodesToLabels).reverse().map((statusCode) => {\n        const label = statusCodesToLabels[statusCode];\n\n        if (nodesByStatusCode[statusCode].length === 0) {\n          return null;\n        }\n\n        return (\n          <NodeList\n            key={label}\n            defaultOpen={Number(statusCode) > 0}\n            title={label}\n            nodes={nodesByStatusCode[statusCode]}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nGeneralInfoPanel.propTypes = {\n  nodes: PropTypes.instanceOf(Object).isRequired,\n  actions: PropTypes.instanceOf(Object).isRequired,\n};\n","/**\n *\n */\nexport function getFilteredNodes({ nodes, filters, neighbourLevel = 0 }) {\n  if (!Object.keys(filters).length) {\n    return nodes;\n  }\n\n  const matchedNodesIds = Object.values(nodes).reduce((filteredNodes, node) => {\n    const doesNodeMatchFilters = Object.keys(filters).every((filter) => {\n      if (!node.tags[filter]) {\n        return false;\n      }\n      if (!filters[filter].some((item) => node.tags[filter].includes(item))) {\n        return false;\n      }\n      return true;\n    });\n\n    if (!doesNodeMatchFilters) {\n      return filteredNodes;\n    }\n\n    return [...filteredNodes, node.id];\n  }, []);\n\n  const neighbourNodes = findNeighbourNodes(nodes, matchedNodesIds, neighbourLevel);\n\n  return Object.values(nodes)\n    .filter((node) => neighbourNodes.includes(node.id))\n    .reduce((prev, node) => {\n      return { ...prev, [node.id]: node };\n    }, {});\n}\n\nexport function findNeighbourNodes(allNodes, nodeIds, neighbourLevel = 0) {\n  const searchedNodes = {};\n  function findNeighbours(nodes, depth = 0) {\n    if (depth <= 0) {\n      return nodes;\n    }\n    const neighbourNodes = nodes.reduce((prev, node) => {\n      if (searchedNodes[node] && searchedNodes[node] > depth) {\n        return prev;\n      }\n      searchedNodes[node] = depth;\n      const neighbours = [\n        ...allNodes[node].dependencies.map((d) => d.id),\n        ...allNodes[node].dependents.map((d) => d.id),\n      ];\n      return [...prev, node, ...findNeighbours(neighbours, depth - 1)];\n    }, []);\n\n    return [...new Set(neighbourNodes)];\n  }\n\n  const neighbourNodes = findNeighbours(nodeIds, neighbourLevel);\n\n  return neighbourNodes;\n}\n\nexport function graphFormatter(nodeDictionary) {\n  const nodes = Object.values(nodeDictionary).map((node) => {\n    const {\n      id, type, status, tags,\n    } = node;\n\n    return {\n      id,\n      type,\n      status,\n      tags,\n    };\n  });\n  const links = Object.values(nodeDictionary)\n    .map((node) => node.dependents.reduce((nodeLinks, dependent) => {\n      if (!nodeDictionary[dependent.id]) {\n        return nodeLinks;\n      }\n      return [\n        ...nodeLinks,\n        {\n          source: node.id,\n          target: dependent.id,\n          type: dependent.type,\n        },\n      ];\n    }, []))\n    .flat();\n\n  return { nodes, links };\n}\n\nexport function getNodeDetails(nodeDictionary, nodeId) {\n  const selectedNode = nodeDictionary[nodeId];\n  return {\n    ...selectedNode,\n    dependents: selectedNode.dependents.map((link) => ({ ...link, ...nodeDictionary[link.id] })),\n    dependencies: selectedNode.dependencies.map((link) => ({\n      ...link,\n      ...nodeDictionary[link.id],\n    })),\n  };\n}\n\nexport function getNodesGroupedByTag(nodeDictionary, tagId) {\n  if (tagId === 'node') {\n    return nodeDictionary;\n  }\n\n  const nodeTagValues = Object.values(nodeDictionary).reduce((nodes, node) => {\n    return nodes.concat(...node.tags[tagId]);\n  }, []);\n  const newNodes = [...new Set(nodeTagValues)];\n\n  const groupNodes = newNodes.reduce((nodes, nodeId) => {\n    const relatedNodes = Object.values(nodeDictionary).filter((node) => {\n      return node.tags[tagId].includes(nodeId);\n    });\n    const status = Math.max(...relatedNodes.map((node) => node.status));\n    const dependents = new Set();\n    const dependencies = new Set();\n\n    relatedNodes.forEach((node) => {\n      node.dependents.forEach((dependent) => {\n        if (!nodeDictionary[dependent.id]) {\n          return;\n        }\n        nodeDictionary[dependent.id].tags[tagId].forEach((tagValue) => {\n          dependents.add(tagValue);\n        });\n      });\n      node.dependencies.forEach((dependency) => {\n        if (!nodeDictionary[dependency.id]) {\n          return;\n        }\n        nodeDictionary[dependency.id].tags[tagId].forEach((tagValue) => {\n          dependencies.add(tagValue);\n        });\n      });\n    });\n\n    return {\n      ...nodes,\n      [nodeId]: {\n        id: nodeId,\n        group: true,\n        status,\n        type: 'group',\n        dependents: [...dependents].map((d) => ({ id: d })),\n        dependencies: [...dependencies].map((d) => ({ id: d })),\n      },\n    };\n  }, {});\n\n  return groupNodes;\n}\n","import * as types from '../constants/action-types';\nimport callApi from '../services/api-client';\nimport { getConfig } from '../services/read-config';\n\n/**\n * Returns the graph informations\n * @param {Number} radius radius of the nodes\n * @param {Number} fontSize font size of the nodes text\n *\n * @return {Promise}\n */\nexport default function readGraphData() {\n  return (dispatch) => {\n    dispatch({ type: types.GET_GRAPH_REQUEST });\n\n    callApi('GET', getConfig('graphUrl'))\n      .then(({ data = {} }) => {\n        // code to replace once the api uses the correct format\n        return dispatch({\n          type: types.GET_GRAPH_SUCCESS,\n          nodes: data,\n        });\n      })\n      .catch((error) => dispatch({ type: types.GET_GRAPH_FAILURE, error }));\n\n    return getConfig('enablePolling') && setTimeout(() => {\n      dispatch(readGraphData());\n    }, getConfig('pollingInterval'));\n  };\n}\n","/* eslint-disable no-param-reassign */\nimport { getConfig } from '../../services/read-config';\n\n/**\n * Create angles for the arrow\n *\n * @param {Object} links get the source and the target\n * @param {Number} radius radius of the node\n * @param {Number} arcX arcX\n * @param {Number} arcY arcY\n *\n */\nfunction drawAngle(links, radius, arcX, arcY) {\n  const { x: sourceX, y: sourceY } = links.source;\n  const { x: targetX, y: targetY } = links.target;\n  const settings = getConfig('canvasSettings');\n  const { nodes } = settings;\n  const {\n    bend, arrowheadLength, startArrow, endArrow,\n  } = settings.links;\n\n  const circumference = Math.PI * 2;\n  let drawStartArrow = startArrow;\n  let drawEndArrow = endArrow;\n  let secondAngle;\n  let firstAngle;\n  let finalFirstAngle;\n  let finalSecondAngle;\n\n  // find angle from center to start and end\n  firstAngle = Math.atan2(sourceY - arcY, sourceX - arcX);\n  secondAngle = Math.atan2(targetY - arcY, targetX - arcX);\n\n  // normalise angles\n  firstAngle = (firstAngle + circumference) % circumference;\n  secondAngle = (secondAngle + circumference) % circumference;\n\n  // ensure angles are in correct directions\n  if (bend < 0) {\n    if (firstAngle < secondAngle) {\n      firstAngle += circumference;\n    }\n  } else if (secondAngle < firstAngle) {\n    secondAngle += circumference;\n  }\n\n  // convert arrow length to angular length\n  const arrowAng = (arrowheadLength / radius) * Math.sign(bend);\n  const angle = (nodes.radius / radius) * Math.sign(bend);\n  // get angular length of start and end circles and move arc start and ends\n  firstAngle += angle;\n  secondAngle -= angle;\n  finalFirstAngle = firstAngle;\n  finalSecondAngle = secondAngle;\n\n  // check for too close and no room for arc\n  if ((bend < 0 && firstAngle < secondAngle) || (bend > 0 && secondAngle < firstAngle)) {\n    return undefined;\n  }\n  // is there a start arrow\n  if (drawStartArrow) {\n    finalFirstAngle += arrowAng;\n  } // move arc start to inside arrow\n  // is there an end arrow\n  if (drawEndArrow) {\n    finalSecondAngle -= arrowAng;\n  } // move arc end to inside arrow\n\n  // check for too close and remove arrows if so\n  if (\n    (bend < 0 && finalFirstAngle < finalSecondAngle)\n    || (bend > 0 && finalSecondAngle < finalFirstAngle)\n  ) {\n    drawStartArrow = false;\n    drawEndArrow = false;\n    finalFirstAngle = firstAngle;\n    finalSecondAngle = secondAngle;\n  }\n\n  return {\n    firstAngle,\n    secondAngle,\n    finalFirstAngle,\n    finalSecondAngle,\n    radius,\n    arcX,\n    arcY,\n  };\n}\n\nfunction drawArrow(context, angle, finalAngle, arrowWidth, angles) {\n  const { radius, arcX, arcY } = angles;\n  context.moveTo(Math.cos(angle) * radius + arcX, Math.sin(angle) * radius + arcY);\n  context.lineTo(\n    Math.cos(finalAngle) * (radius - arrowWidth / 2) + arcX,\n    Math.sin(finalAngle) * (radius - arrowWidth / 2) + arcY,\n  );\n  context.lineTo(\n    Math.cos(finalAngle) * (radius + arrowWidth / 2) + arcX,\n    Math.sin(finalAngle) * (radius + arrowWidth / 2) + arcY,\n  );\n  context.closePath();\n}\n\nfunction drawArc(context, angles) {\n  const settings = getConfig('canvasSettings');\n  const {\n    bend, startArrow, endArrow, vectorColor, arrowWidth, arrowheadWidth,\n  } = settings.links;\n  const {\n    firstAngle, secondAngle, finalFirstAngle, finalSecondAngle, radius, arcX, arcY,\n  } = angles;\n\n  context.beginPath();\n  context.arc(arcX, arcY, radius, finalFirstAngle, finalSecondAngle, bend < 0);\n  context.fillStyle = vectorColor;\n  context.lineWidth = arrowWidth;\n  context.strokeStyle = vectorColor;\n  context.stroke();\n\n  // draw start arrow if needed\n  context.beginPath();\n  if (startArrow) {\n    drawArrow(context, firstAngle, finalFirstAngle, arrowheadWidth, angles);\n  }\n\n  // draw end arrow if needed\n  if (endArrow) {\n    drawArrow(context, secondAngle, finalSecondAngle, arrowheadWidth, angles);\n  }\n  context.fill();\n}\n\n/**\n * Create vectors for canvas graph\n *\n * @param {Object} context context of the canvas\n * @param {Object} links get the source and the target\n *\n */\nexport default function drawNodeArrow(context, links) {\n  const settings = getConfig('canvasSettings');\n  const { x: sourceX, y: sourceY } = links.source;\n  const { x: targetX, y: targetY } = links.target;\n\n  let vectorX;\n  let vectorY;\n  let radius;\n\n  // find mid point\n  const horizontalMidPoint = (sourceX + targetX) / 2;\n  const verticalMidPoint = (sourceY + targetY) / 2;\n\n  // get vector from start to end\n  vectorX = targetX - sourceX;\n  vectorY = targetY - sourceY;\n\n  // find distance\n  const distance = Math.sqrt(vectorX * vectorX + vectorY * vectorY);\n\n  // normalise vector\n  vectorX /= distance;\n  vectorY /= distance;\n\n  const bendDistance = settings.links.bend * distance;\n\n  // Arc amount bend more at distance\n  const arcAmountX = horizontalMidPoint + vectorY * bendDistance;\n  const arcAmountY = verticalMidPoint - vectorX * bendDistance;\n\n  // get the radius\n  radius = (0.5\n      * ((sourceX - arcAmountX) * (sourceX - arcAmountX)\n        + (sourceY - arcAmountY) * (sourceY - arcAmountY)))\n    / bendDistance;\n\n  // use radius to get arc center\n  const arcX = arcAmountX - vectorY * radius;\n  const arcY = arcAmountY + vectorX * radius;\n\n  // radius needs to be positive for the rest of the code\n  radius = Math.abs(radius);\n\n  const angles = drawAngle(links, radius, arcX, arcY) || {};\n\n  drawArc(context, angles);\n}\n","/* eslint-disable no-param-reassign */\nimport { getConfig } from '../../services/read-config';\nimport { statusCodesToLabels } from '../../constants/status-codes';\n\nexport default function drawNode(context, {\n  x, y, type, status,\n}) {\n  const types = getConfig('entityTypes');\n  const settings = getConfig('canvasSettings');\n  const {\n    defaultStatus, statusColors, statusStrokes, nodes,\n  } = settings;\n  const { lineWidth, radius } = nodes;\n  const { shape, strokeColor } = types[type] || types.default;\n  const statusCode = statusCodesToLabels[status] || defaultStatus;\n  const fillStyle = statusColors[statusCode];\n  const strokeStyle = statusStrokes[statusCode];\n\n  context.fillStyle = fillStyle;\n  context.strokeStyle = strokeColor || strokeStyle;\n  context.lineWidth = lineWidth;\n\n  renderShape(shape, context, { x, y, radius });\n}\n\nfunction renderShape(shape, context, props) {\n  const shapes = {\n    circle,\n    database,\n    hexagon,\n    pentagon,\n    heptagon,\n    octogon,\n    rectangle,\n    square,\n    triangle,\n  };\n  const nodeShape = (shapes[shape] && shape) || 'circle';\n\n  return shapes[nodeShape](context, props);\n}\n\nfunction square(context, { x, y, radius }) {\n  const height = radius * 2;\n\n  context.beginPath();\n  context.rect(x - height / 2, y - height / 2, height, height);\n  context.stroke();\n  context.fill();\n}\nfunction rectangle(context, { x, y, radius }) {\n  const height = radius * 1.5;\n  const width = radius * 3;\n\n  context.beginPath();\n  context.rect(x - width / 2, y - height / 2, width, height);\n  context.stroke();\n  context.fill();\n}\nfunction circle(context, { x, y, radius }) {\n  context.beginPath();\n  context.arc(x, y, radius, 0, 2 * Math.PI);\n  context.stroke();\n  context.fill();\n}\nfunction database(context, { x, y, radius }) {\n  const xRadius = radius / 1.2;\n  const yRadius = radius / 2;\n  context.lineWidth /= 2;\n  const ellipsisOffset = radius / 2.5;\n\n  context.beginPath();\n  context.ellipse(x, y + ellipsisOffset, xRadius, yRadius, Math.PI, 0, Math.PI * 2);\n  context.fill();\n  context.stroke();\n  context.beginPath();\n  context.ellipse(x, y + 0, xRadius, yRadius, Math.PI, 0, Math.PI * 2);\n  context.fill();\n  context.stroke();\n  context.beginPath();\n  context.ellipse(x, y - ellipsisOffset, xRadius, yRadius, Math.PI, 0, Math.PI * 2);\n  context.fill();\n  context.stroke();\n}\n\nfunction pentagon(context, { x, y, radius }) {\n  drawPolygon(context, {\n    x,\n    y,\n    radius,\n    sides: 5,\n    size: radius * 1.1,\n  });\n}\nfunction hexagon(context, { x, y, radius }) {\n  drawPolygon(context, {\n    x,\n    y,\n    radius,\n    sides: 6,\n    size: radius * 1.1,\n  });\n}\nfunction heptagon(context, { x, y, radius }) {\n  drawPolygon(context, {\n    x,\n    y,\n    radius,\n    sides: 7,\n    size: radius * 1.1,\n  });\n}\nfunction octogon(context, { x, y, radius }) {\n  drawPolygon(context, {\n    x,\n    y,\n    radius,\n    sides: 8,\n    size: radius * 1.1,\n  });\n}\nfunction triangle(context, { x, y, radius }) {\n  drawPolygon(context, {\n    x,\n    y,\n    radius,\n    sides: 3,\n    size: radius * 1.3,\n  });\n}\n\nfunction drawPolygon(context, {\n  x, y, sides, size,\n}) {\n  context.lineWidth /= 2;\n  context.beginPath();\n  context.moveTo(x + size * Math.cos(0), y + size * Math.sin(0));\n\n  for (let side = 0; side <= sides + 1; side += 1) {\n    context.lineTo(\n      x + size * Math.cos(side * 2 * (Math.PI / sides)),\n      y + size * Math.sin(side * 2 * (Math.PI / sides)),\n    );\n  }\n\n  context.fill();\n  context.stroke();\n}\n","/* eslint-disable no-param-reassign */\nimport drawLink from './draw-link';\nimport { getConfig } from '../../services/read-config';\nimport drawNode from './draw-node';\nimport drawLabel from './draw-label';\n\nexport default function drawGraph(canvas, cameraPosition, { nodes, links }) {\n  if (!cameraPosition) {\n    return;\n  }\n  const context = canvas.getContext('2d');\n  const settings = getConfig('canvasSettings');\n  const { width, height } = canvas.parentElement.getBoundingClientRect();\n\n  canvas.width = width;\n  canvas.height = height;\n\n  context.save();\n  context.fillStyle = settings.backgroundColor;\n  context.fillRect(0, 0, width, height);\n  context.translate(cameraPosition.x, cameraPosition.y);\n  context.scale(cameraPosition.k, cameraPosition.k);\n\n  links.forEach((link) => drawLink(context, link));\n  nodes.forEach((node) => drawNode(context, node));\n\n  const { label } = settings.nodes;\n\n  context.fillStyle = label.fillStyle;\n  context.textAlign = label.textAlign;\n  context.font = `${label.fontType} ${label.fontSize}px ${label.fontName}`;\n  nodes.forEach((node) => drawLabel(context, node));\n\n  context.restore();\n}\n","export default function drawLabel(context, node) {\n  const { x, y, id } = node;\n\n  const label = id;\n\n  context.fillText(label, x, y);\n}\n","import { getConfig } from '../../services/read-config';\n\n/**\n * Find a node from a click\n * only nodes that we have send an event\n * event.x is the same as d3.mouse\n * consistent-return is disabled because it breaks the behavior\n * if anything is returned beside undefined\n *\n * @param {Object} transform transform infos (k, x, y)\n * @param {Object} data the nodes\n * @param {Boolean} isClicked for the drag or the click\n * @return {Object} the clicked node\n */\n\nexport default function getNodeFromCanvasClick(event, transform, nodes) {\n  const layerX = (event.sourceEvent && event.sourceEvent.layerX) || event.layerX;\n  const layerY = (event.sourceEvent && event.sourceEvent.layerY) || event.layerY;\n  const x = event ? transform.invertX(layerX) : null;\n  const y = event ? transform.invertY(layerY) : null;\n  const { nodes: nodesConfig } = getConfig('canvasSettings');\n  const { radius } = nodesConfig;\n\n  let dx;\n  let dy;\n\n  for (let i = 0; i < nodes.length; i += 1) {\n    const node = nodes[i];\n    dx = x - node.x;\n    dy = y - node.y;\n\n    if (dx * dx + dy * dy < radius * radius) {\n      return node;\n    }\n  }\n\n  return undefined;\n}\n","import * as d3 from 'd3';\nimport drawAll from './draw-graph';\nimport { getConfig } from '../../services/read-config';\nimport getNodeFromCanvasClick from './handle-canvas-click';\nimport { onDragStart, onDrag, onDragEnd } from './drag';\n\nconst graphFunctions = {};\n\nexport default graphFunctions;\n\ngraphFunctions.initGraph = function initGraph(canvas, { data: { nodes, links }, actions }) {\n  const settings = getConfig('canvasSettings');\n  const { width, height } = canvas.parentElement.getBoundingClientRect();\n\n  let cameraPosition = d3.zoomIdentity\n    .translate(width / 2, height / 2)\n    .scale(settings.minimumScale);\n\n  // Create force simulation\n  const simulation = d3\n    .forceSimulation()\n    .force('x', d3.forceX(width / 2).strength(0.1)) // center horizontally\n    .force('y', d3.forceY(height / 2).strength(0.1)) // center vertically\n    .force('charge', d3.forceManyBody().strength(-15000)) // every node pushes other nodes\n    .force(\n      'link',\n      d3\n        .forceLink()\n        .distance(2000)\n        .strength(1)\n        .id((d) => d.id),\n    )\n    .force('center', d3.forceCenter(width / 2, height / 2));\n\n  simulation\n    .nodes(nodes)\n    .force('link')\n    .links(links);\n\n  simulation.on('tick', () => {\n    drawAll(canvas, cameraPosition, { nodes, links });\n  });\n\n  d3.select(canvas).on('click', (event) => {\n    const node = getNodeFromCanvasClick(event, cameraPosition, nodes);\n\n    if (node && node.id) {\n      actions.clickNode(node.id);\n    }\n  });\n\n  const zoom = d3\n    .zoom()\n    .scaleExtent([settings.minimumScale, settings.maximumScale])\n    .on('zoom', (event) => {\n      cameraPosition = event.transform;\n      updateGraph({ nodes, links });\n    });\n  const setCameraPosition = zoom.transform;\n  const drag = d3\n    .drag()\n    .subject((event) => {\n      const node = getNodeFromCanvasClick(event, cameraPosition, nodes);\n\n      if (!node) {\n        return undefined;\n      }\n\n      node.x = cameraPosition.applyX(node.x);\n      node.y = cameraPosition.applyY(node.y);\n      return node;\n    })\n    .on('start', (event) => onDragStart(event, simulation, cameraPosition))\n    .on('drag', (event) => onDrag(event, cameraPosition))\n    .on('end', (event) => onDragEnd(event, simulation));\n\n  d3.select(canvas)\n    .call(drag)\n    .call(zoom)\n    .call(setCameraPosition, cameraPosition);\n\n  function updateGraph(data) {\n    drawAll(canvas, cameraPosition, data);\n  }\n  function resizeCanvas() {\n    const { x, y, k } = cameraPosition;\n\n    const newCameraPosition = d3.zoomIdentity.translate(x, y).scale(k);\n\n    d3.select(canvas).call(setCameraPosition, newCameraPosition);\n  }\n  function setCameraToNode(selectedNode) {\n    const { scale, duration } = settings.zoom;\n    const nodeToZoom = nodes.find((a) => a.id === selectedNode);\n\n    if (!nodeToZoom) {\n      return;\n    }\n\n    d3.select(canvas)\n      .transition()\n      .duration(duration)\n      .call(\n        setCameraPosition,\n        d3.zoomIdentity\n          .translate(width / 2, height / 2)\n          .scale(scale)\n          .translate(-nodeToZoom.x, -nodeToZoom.y),\n      );\n  }\n  function zoomFit() {\n    const { topLeft, bottomRight, center } = getGraphBounds();\n    const paddingPercent = 0.85;\n    const widthRatio = (bottomRight.x - topLeft.x) / width;\n    const heightRatio = (topLeft.y - bottomRight.y) / height;\n    const idealScale = paddingPercent / Math.max(widthRatio, heightRatio, 1);\n\n    d3.select(canvas)\n      .transition()\n      .duration(200)\n      .call(\n        setCameraPosition,\n        d3.zoomIdentity\n          .translate(width / 2, height / 2)\n          .scale(idealScale)\n          .translate(-center.x, -center.y),\n      );\n  }\n  function getGraphBounds() {\n    const nodeXs = nodes.map((node) => node.x);\n    const nodeYs = nodes.map((node) => node.y);\n    const topLeft = { x: Math.min(...nodeXs), y: Math.max(...nodeYs) };\n    const bottomRight = { x: Math.max(...nodeXs), y: Math.min(...nodeYs) };\n    return {\n      topLeft,\n      bottomRight,\n      center: {\n        x: topLeft.x + (bottomRight.x - topLeft.x) / 2,\n        y: topLeft.y - (topLeft.y - bottomRight.y) / 2,\n      },\n    };\n  }\n\n  graphFunctions.updateGraph = updateGraph;\n  graphFunctions.resizeCanvas = resizeCanvas;\n  graphFunctions.zoomFit = zoomFit;\n  graphFunctions.setCameraToNode = setCameraToNode;\n};\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useHistory,\n  useParams,\n} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport styles from './index.module.scss';\nimport graphFunctions from './graph-functions';\nimport { selectGroup } from '../../actions/filters';\nimport { graphFormatter } from '../../reducers/nodes-selector';\n\nexport default function Graph(props) {\n  const canvasRef = useRef(null);\n  const selectNodeDelay = useRef(1200);\n  const {\n    nodes, groupLevel, filters, forceRenderId,\n  } = props;\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { selectedNodeId } = useParams();\n\n  useEffect(() => {\n    const actions = {\n      clickNode: (nodeId) => {\n        if (nodes[nodeId].group) {\n          return dispatch(selectGroup(groupLevel, nodeId));\n        }\n        return history.push(`/node/${nodeId}`);\n      },\n    };\n    //  d3 setup\n    const canvas = canvasRef.current;\n\n    graphFunctions.initGraph(canvas, { data: graphFormatter(nodes), actions });\n  }, [nodes, dispatch, groupLevel, history]);\n\n  useEffect(() => {\n    const data = graphFormatter(nodes);\n\n    graphFunctions.resizeCanvas(data);\n  }, [nodes, forceRenderId]);\n\n  useEffect(() => {\n    // select node zoom handler\n    if (!selectedNodeId) {\n      return;\n    }\n    setTimeout(() => {\n      graphFunctions.setCameraToNode(selectedNodeId);\n      selectNodeDelay.current = 500;\n    }, selectNodeDelay.current);\n  }, [selectedNodeId, nodes]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      graphFunctions.zoomFit();\n    }, 600);\n  }, [filters, groupLevel]);\n\n  return <canvas id=\"graph\" ref={canvasRef} className={styles.canvas}/>;\n}\n\nGraph.propTypes = {\n  nodes: PropTypes.instanceOf(Object).isRequired,\n  selectedNode: PropTypes.string,\n  filters: PropTypes.instanceOf(Object),\n  groupLevel: PropTypes.string,\n  forceRenderId: PropTypes.number,\n};\n\nGraph.defaultProps = {\n  selectedNode: null,\n};\n","// After a new pointer becomes active\n/* eslint-disable no-param-reassign */\nexport function onDragStart(event, simulation, transform) {\n  if (!event.active) simulation.alphaTarget(0.3).restart();\n  event.subject.fx = transform.invertX(event.x);\n  event.subject.fy = transform.invertY(event.y);\n}\n\n// After an active pointer moves\nexport function onDrag(event, transform) {\n  event.subject.fx = transform.invertX(event.x);\n  event.subject.fy = transform.invertY(event.y);\n}\n\n// After an active pointer becomes inactive\nexport function onDragEnd(event, simulation) {\n  if (!event.active) {\n    simulation.alphaTarget(0);\n  }\n  event.subject.fx = null;\n  event.subject.fy = null;\n}\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './NeighbourLevelControl.module.scss';\n\nexport default function NeighbourLevelControl(props) {\n  const debounceTimer = useRef();\n  const { neighbourLevel, setNeighbourLevel } = props;\n\n  function handleLevelChange(value) {\n    clearTimeout(debounceTimer.current);\n    debounceTimer.current = setTimeout(() => {\n      setNeighbourLevel(value);\n    }, 0);\n  }\n\n  const ordinalMarkers = ['th', 'st', 'nd', 'rd'];\n  const ordinalMarker = ordinalMarkers[neighbourLevel] || 'th';\n\n  return (\n    <div className={styles.neighbourLevelControl}>\n      Show filtered nodes and their{' '}\n      <input\n        className={styles.numberInput}\n        onChange={(e) => handleLevelChange(e.target.value)}\n        value={neighbourLevel}\n        type=\"number\"\n        min=\"0\"\n        max=\"10\"\n      />\n    <span className={styles.ordinalMarker}>{ordinalMarker}</span> level neighbours\n    </div>\n  );\n}\n\nNeighbourLevelControl.propTypes = {\n  neighbourLevel: PropTypes.number.isRequired,\n  setNeighbourLevel: PropTypes.func.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/circle.2527e24e.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport circle from './circle.svg';\nimport database from './database.svg';\nimport hexagon from './hexagon.svg';\nimport pentagon from './pentagon.svg';\nimport heptagon from './heptagon.svg';\nimport octogon from './octogon.svg';\nimport rectangle from './rectangle.svg';\nimport square from './square.svg';\nimport triangle from './triangle.svg';\n\nconst shapes = {\n  circle,\n  database,\n  hexagon,\n  pentagon,\n  heptagon,\n  octogon,\n  rectangle,\n  square,\n  triangle,\n};\n\nexport default function EntityShape(props) {\n  const { name, shape } = props;\n  const icon = shapes[shape];\n\n  return <img src={icon} alt={`type ${name} is shown as ${shape}s on the graph`} />;\n}\n\nEntityShape.propTypes = {\n  name: PropTypes.string,\n  shape: PropTypes.string,\n};\n","export default __webpack_public_path__ + \"static/media/database.76ba0568.svg\";","export default __webpack_public_path__ + \"static/media/hexagon.62124f4d.svg\";","export default __webpack_public_path__ + \"static/media/pentagon.278e132a.svg\";","export default __webpack_public_path__ + \"static/media/heptagon.b751daf9.svg\";","export default __webpack_public_path__ + \"static/media/octogon.f10b87a5.svg\";","export default __webpack_public_path__ + \"static/media/rectangle.b4b9d755.svg\";","export default __webpack_public_path__ + \"static/media/square.f2b1fe08.svg\";","export default __webpack_public_path__ + \"static/media/triangle.ee2a511f.svg\";","import React from 'react';\nimport EntityShape from '../EntityShape/index';\nimport { getConfig } from '../../services/read-config';\nimport styles from './Legend.module.scss';\n\nexport default function StatusLegend() {\n  const entityTypes = getConfig('entityTypes');\n  const { statusColors } = getConfig('canvasSettings');\n\n  return (\n    <div className={styles.legendWrapper} title=\"status\">\n      <div>\n        <h3>Status</h3>\n        <ul className={styles.legend}>\n          {Object.keys(statusColors).map((status) => (\n            <li key={status}>\n              <span\n                className={styles.statusColorMarker}\n                style={{\n                  backgroundColor: statusColors[status],\n                }}\n              />\n              <span className={styles.label}>{status}</span>\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <h3>Type</h3>\n        <ul className={styles.legend}>\n          {Object.keys(entityTypes).map((type) => {\n            const { name, shape } = entityTypes[type];\n\n            return (\n              <li key={type}>\n                <EntityShape name={name} shape={shape} />\n                <span className={styles.label}>{type} </span>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\nimport NeighbourLevelControl from './NeighbourLevelControl';\nimport Legend from './Legend';\n\nimport styles from './index.module.scss';\n\nexport default function LegendOverlay(props) {\n  const { actions, neighbourLevel } = props;\n  const [isOpen, setOpen] = useState(true);\n  const toggleIcon = (isOpen && faCaretDown) || faCaretUp;\n\n  return (\n    <div className={`${styles.wrapper} ${!isOpen && styles.closed}`}>\n      <div className={styles.pullTab}>\n        <button className={styles.title} onClick={() => setOpen(!isOpen)}>\n          <span>Legend</span>\n          <FontAwesomeIcon icon={toggleIcon} />\n        </button>\n      </div>\n      <div className={styles.content}>\n        <NeighbourLevelControl\n          className={styles.neighbourLevelControl}\n          setNeighbourLevel={actions.setNeighbourLevel}\n          neighbourLevel={neighbourLevel}\n        />\n        <Legend />\n      </div>\n    </div>\n  );\n}\n\nLegendOverlay.propTypes = {\n  actions: PropTypes.object,\n  groupedNodes: PropTypes.object,\n  groupLevel: PropTypes.string,\n  neighbourLevel: PropTypes.number,\n  availableFilters: PropTypes.object,\n  filters: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Graph from '../components/Graph';\nimport LegendOverlay from '../components/LegendOverlay';\nimport styles from './GraphWrapper.module.scss';\n\nexport function GraphWrapper(props) {\n  const {\n    nodes, groupLevel, filters, forceRenderId, actions, neighbourLevel,\n  } = props;\n  return <div className={styles.GraphContainer}>\n          <Graph\n            nodes={nodes}\n            groupLevel={groupLevel}\n            filters={filters}\n            forceRenderId={forceRenderId}\n          />\n          {Object.keys(nodes).length === 0\n          && (<div className={styles.warningMessageFilters}>\n                <p>No results, too many filters applied</p>\n              </div>)}\n          <LegendOverlay actions={actions} neighbourLevel={Number(neighbourLevel)} />\n          </div>;\n}\n\nGraphWrapper.propTypes = {\n  nodes: PropTypes.instanceOf(Object).isRequired,\n  filters: PropTypes.instanceOf(Object),\n  groupLevel: PropTypes.string,\n  forceRenderId: PropTypes.number,\n  neighbourLevel: PropTypes.number,\n  actions: PropTypes.shape({\n    handleFilterChange: PropTypes.func,\n    setGroupLevel: PropTypes.func,\n    setNeighbourLevel: PropTypes.func,\n  }),\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Switch, Route } from 'react-router-dom';\n\nimport LeftPanel from '../components/LeftPanel/index';\nimport RightPanel from '../components/RightPanel/index';\nimport NodePanel from '../components/NodePanel/index';\nimport GeneralInfoPanel from '../components/GeneralInfoPanel';\nimport { getFilteredNodes, getNodesGroupedByTag } from '../reducers/nodes-selector';\nimport { getAvailableFilters } from '../reducers/filters';\n\nimport readGraphData from '../actions/graph';\nimport {\n  setFilter, resetFilters, setGroupLevel, setNeighbourLevel,\n} from '../actions/filters';\n\nimport styles from './App.module.scss';\nimport { GraphWrapper } from './GraphWrapper';\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const [isPanelOpen, setPanelOpen] = useState(true);\n  const [forceRenderId, setForceRenderId] = useState(null);\n  const groupLevel = useSelector((state) => state.groupLevel);\n  const neighbourLevel = useSelector((state) => state.neighbourLevel);\n  const filters = useSelector((state) => state.filters);\n  const nodeDictionary = useSelector((state) => state.nodes);\n  const details = useSelector((state) => state.details);\n  const filteredNodes = useSelector((state) => getFilteredNodes(state, neighbourLevel));\n  const groupedNodes = getNodesGroupedByTag(filteredNodes, groupLevel);\n  const availableFilters = getAvailableFilters({ nodes: nodeDictionary });\n\n  useEffect(() => {\n    dispatch(readGraphData());\n  }, [dispatch]);\n\n  const actions = {\n    handleFilterChange: (filterId, value) => {\n      dispatch(setFilter(filterId, value));\n    },\n    handleResetFilters: () => {\n      dispatch(resetFilters());\n    },\n    setGroupLevel: (value) => dispatch(setGroupLevel(value)),\n    setNeighbourLevel: (value) => dispatch(setNeighbourLevel(value)),\n  };\n\n  if (!Object.keys(nodeDictionary).length) {\n    return <p>Loading ...</p>;\n  }\n\n  const handleOpenPanel = (isOpen) => {\n    setPanelOpen(isOpen);\n    setTimeout(() => {\n      setForceRenderId(Date.now());\n    }, 300);\n  };\n\n  return (\n    <div className={styles.app}>\n      <LeftPanel\n        actions={actions}\n        availableFilters={availableFilters}\n        groupedNodes={groupedNodes}\n        groupLevel={groupLevel}\n        filters={filters}\n      />\n      <Switch>\n        <Route path=\"/node/:selectedNodeId\">\n          <GraphWrapper\n            nodes={groupedNodes}\n            groupLevel={groupLevel}\n            filters={filters}\n            forceRenderId={forceRenderId}\n            actions={actions}\n            neighbourLevel={neighbourLevel}\n          />\n          <RightPanel handleOpenPanel={handleOpenPanel} isPanelOpen={isPanelOpen}>\n            <NodePanel nodes={nodeDictionary} details={details} actions={actions} />\n          </RightPanel>\n        </Route>\n        <Route path=\"/\">\n          <GraphWrapper\n            nodes={groupedNodes}\n            groupLevel={groupLevel}\n            filters={filters}\n            forceRenderId={forceRenderId}\n            actions={actions}\n            neighbourLevel={neighbourLevel}\n          />\n          <RightPanel handleOpenPanel={handleOpenPanel} isPanelOpen={isPanelOpen}>\n            <GeneralInfoPanel nodes={nodeDictionary} details={details} actions={actions} />\n          </RightPanel>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom';\nimport configureStore from './store/configure-store';\nimport './index.scss';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { readConfig } from './services/read-config';\n\nreadConfig().then(() => {\n  const store = configureStore();\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <Router>\n      <App />\n    </Router>\n    </Provider>,\n    document.getElementById('root'),\n  );\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}